---
interface Props {
  paddedLeft?: boolean,
  paddedRight?: boolean,
  evenColumns?: boolean,
  inverted?: boolean,
  centered?: boolean,
}

const {
  paddedLeft,
  paddedRight,
  evenColumns,
  inverted,
  centered,
} = Astro.props;
---

<section class:list={[
    "project-row",
    {
      "project-row--paddedLeft": paddedLeft,
      "project-row--paddedRight": paddedRight,
      "project-row--evenColumns": evenColumns,
      "project-row--inverted": inverted,
      "project-row--centered": centered,
    }
  ]}
>
  <slot />
</section>

<style lang="scss" is:global>
  .project-row {
    margin: rem(32) 0;

    > *:not(:last-child) {
      margin-bottom: 1rem;
    }

/*     p {
      line-height: 1.2;
    } */

    img {
      width: 100%;
      object-fit: cover;
    }

    @include mediaq($bp-tablet) {
      margin: rem(64) 0;
    }

    & :is(h1, h2, h3, h4, h5, h6) {
      line-height: 1.2;
      width: 100%;
      margin-bottom: 1.2rem;

      @include mediaq($bp-tablet) {
      }
    }

    &--paddedRight {
      @include mediaq($bp-tablet) {
        padding-right: 34%;
      }
    }

    &--paddedLeft {
      @include mediaq($bp-tablet) {
        padding-left: 34%;
      }
    }

    &--centered {
      @include mediaq($bp-tablet) {
        padding: 0 16%;
        text-align: center;
      }
    }

    &--evenColumns {
      @include mediaq($bp-tablet) {
        display: grid;
        align-items: center;
        grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
        gap: rem(32);
      }

      > * {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        
        @include mediaq($bp-tablet) {
          gap: 1rem;
        }
      }
    }

    &--inverted {
      @include mediaq($bp-tablet) {
        grid-auto-flow: dense;
        :last-child {
          grid-column: 1 / 2;
          grid-row: 1 / 2;
        }
      }
    }
  }
</style>
