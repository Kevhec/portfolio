---
import Button from '@components/Button.astro';
import Typography from '@components/Typography.astro';
import { getLangFromUrl, useTranslations } from '@i18n/utils';
import { Image } from 'astro:assets';

import DemoLinkButton from './DemoLinkButton.astro';
import GoBackArrow from './GoBackArrow.astro';
import List from './List.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { project } = Astro.props;
---

<div class="projectHeader">
  <div class="projectHeader__heading">
    <Button as="a" iconOnly href={`/${lang}/`} class="projectHeader__goBack">
      <GoBackArrow />
      <span class="visually-hidden">{t('project.goBack')}</span>
    </Button>
    <Typography as='h1' class="projectHeader__name">
      {project.data.projectName}
    </Typography>
  </div>
  <div class="projectHeader__description">
    <Image src={project.data.mockup} alt={project.data.mockupAlt} class="projectHeader__mockup" />
    <div class="projectHeader__meta">
      <div>
        <Typography as="h3" class="projectHeader__metaHeading semibold">
          { project.data.wasForClient ? t('project.clientLabel') : t('project.personalLabel') }
        </Typography>
        <Typography as="p">
          { project.data.description }
        </Typography>
        <DemoLinkButton href={project.data.demoLink} />
      </div>
      <div>
        <Typography as="h3" class="projectHeader__metaHeading semibold">
          Technologies
        </Typography>
        <List>
          {project.data.stack.map((tech: string) => (
            <li>{tech}</li>
          ))}
        </List>
      </div>
    </div>
  </div>
</div>

<style lang="scss">

  .projectHeader {

    &__heading {
      display: flex;
      position: relative;
      margin: 3rem 0 2rem;
    }

    &__name {
      display: inline-block;
      font-size: rem(36);
      text-align: center;
      position: absolute;
      line-height: 1;
      width: 100%;
      left: 0;
      z-index: 1;

      @include mediaq($bp-tablet) {
        font-size: rem(48)
      }
    }

    &__goBack {
      position: relative;
      top: 2rem;
      display: block;
      width: fit-content;
      height: fit-content;
      z-index: 2;
      overflow: visible;
      transform-origin: left;
      transform: scale(.7);

      @include mediaq($bp-tablet) {
        margin-bottom: 32px;
      }
    }

    &__description {
      @include mediaq($bp-small-pc) {
        display: flex;
        gap: rem(32);
      }
    }

    &__mockup {
      width: 100%;
      height: fit-content;
      margin-bottom: 1rem;

      @include mediaq($bp-small-pc) {
        max-width: 60%;
        margin-bottom: 0;
      }
    }

    &__meta {
      > :first-child {
        margin-bottom: rem(12);
      }

      @include mediaq($bp-tablet) {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(0px, 1fr));
        column-gap: rem(16);
      }

      @include mediaq($bp-small-pc) {
        display: block;

        > :first-child {
          margin-bottom: rem(24);
        }
      }
    }

    &__metaHeading {
      font-size: 1.125rem;
      line-height: 1;
      margin-bottom: .5rem
    }
  }
</style>
