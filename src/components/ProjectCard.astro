---
import { getLangFromUrl, useTranslations } from '@i18n/utils';
import type { CollectionEntry } from 'astro:content';

import CustomImage from './CustomImage.astro';

const pageLang = getLangFromUrl(Astro.url);
const t = useTranslations(pageLang);

interface Props {
  project: CollectionEntry<'projects'> & { projectHref: string }
}

const {
  project,
} = Astro.props;

const {
  data: {
    projectName,
    galleryImages,
  },
} = project;
---

<div class="projectCard relative">
  <div
    class="splide splide-element"
    id={`projectGallery-${projectName}`}
    data-project={projectName}
    role="group"
    aria-label={`${t('projects.showcaseGallery.aria')} ${t('project.name.construelectricjv')}`}
  >
    <div class="splide__track">
      <ul class="splide__list">
        {galleryImages.slice(0, 3).map((image) => (
          <li class="splide__slide">
            <CustomImage
              class="projectCard__image"
              mobileImgUrl={image.src}
              desktopImgUrl={image.src}
              alt={image.alt}
              wFull
            />
          </li>
        ))}
      </ul>
    </div>
  </div>
</div>

<script>
  import Splide from '@splidejs/splide';

  const sliderElements = document.querySelectorAll<HTMLDivElement>('.splide.splide-element');

  sliderElements.forEach((slider) => {
    const projectName = slider?.dataset.project;

    const projectGallery = new Splide(`#projectGallery-${projectName}`, {
      pagination: false,
      pauseOnHover: true,
      type: 'loop',
      perPage: 1,
      drag: false,
      autoplay: true,
      interval: 5000,
      arrowPath: `M31.77 18.23c0.98 0.98 0.98 2.56 0 3.54l-15 15c-0.98
                  0.98-2.56 0.98-3.54 0s-0.98-2.56 0-3.54L26.48 20L13.23
                  6.77c-0.98-0.98-0.98-2.56 0-3.54s2.56-0.98 3.54 0l15 15z
                  `,
      classes: {
        arrows: 'splide__arrows projectCard__arrows',
        arrow: 'splide__arrow projectCard__arrow',
        prev: 'splide__arrow--prev projectCard__arrow--prev',
        next: 'splide__arrow--next projectCard__arrow--next'
      }
    })

    projectGallery.mount();
  })
</script>

<style lang="scss">
  .projectCard {
    position: relative;

    &__arrow {
      position: relative;
      top: 0;
    }
  }

  :global(.projectCard__arrows) {
    padding: rem(4) rem(8);
    border-radius: 55555px;
    display: flex;
    gap: rem(8);
    position: absolute;
    right: 16px;
    bottom: 16px;
    height: fit-content;
    width: min-content;
    background-color: $primary-light-beige;
    z-index: 10;
    opacity: 0.8;
  }

  :global(.projectCard__arrow) {
    padding: rem(4);
    position: unset;
    width: 20px;
    height: auto;
    aspect-ratio: 1 / 1;
    transform: unset;
    background-color: unset;
  }
</style>
